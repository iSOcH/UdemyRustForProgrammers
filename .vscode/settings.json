{
    // Editor settings
    "editor.tabSize": 4,
    "editor.rulers": [120],
    "editor.renderWhitespace": "trailing",
    "editor.suggestSelection": "first",
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.stickyScroll.enabled": false,
    "editor.bracketPairColorization.enabled": false,
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.suggest.preview": true,
    "terminal.integrated.defaultProfile.windows": "Command Prompt",
    // Debug
    "debug.onTaskErrors": "debugAnyway",
    // Explorer
    "explorer.compactFolders": false,
    "explorer.confirmDragAndDrop": false,
    "explorer.confirmDelete": false,
    "explorer.copyRelativePathSeparator": "/",
    // Files
    "files.autoSave": "onFocusChange",
    "files.exclude": {
        "node_modules/**/*": true,
        "**/.classpath": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.factorypath": true
    },
    "files.associations": {
        "*.pyx": "cython",
        ".clang*": "yaml",
        "*.gpj": "jsonc",
        "*.gvw": "jsonc",
        "*.hpp.in": "cpp"
    },
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,
    // workbench
    "workbench.startupEditor": "none",
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook",
        "*.md": "vscode.markdown.preview.editor",
        "*.svg": "svgPreviewer.customEditor"
    },
    "workbench.colorTheme": "Default Dark+",
    // Git
    "git.enableSmartCommit": true,
    "git.autofetch": true,
    "git.confirmSync": false,
    "git.openRepositoryInParentFolders": "always",
    // Telemetry and Security
    "partialDiff.enableTelemetry": false,
    // Prettier
    "prettier.tabWidth": 4,
    "prettier.singleQuote": true,
    "prettier.jsxSingleQuote": true,
    "prettier.trailingComma": "all",
    "prettier.useEditorConfig": true,
    "prettier.bracketSpacing": false,
    // Markdown
    "markdown.validate.enabled": true,
    "[markdown]": {
        "files.trimTrailingWhitespace": false,
        "editor.formatOnSave": false,
        "editor.defaultFormatter": "yzhang.markdown-all-in-one",
        "editor.wordWrap": "wordWrapColumn",
        "editor.wordWrapColumn": 80
    },
    // Different languages
    "[yaml]": {
        "editor.formatOnSave": false,
        "editor.defaultFormatter": "redhat.vscode-yaml",
        "editor.wordWrap": "wordWrapColumn",
        "editor.wordWrapColumn": 80
    },
    "[json]": {
        "editor.formatOnSave": false,
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[jsonc]": {
        "editor.formatOnSave": false
    },
    "[plaintext]": {
        "editor.wordWrap": "wordWrapColumn",
        "editor.wordWrapColumn": 120
    },
    "[toml]": {
        "editor.wordWrap": "wordWrapColumn",
        "editor.wordWrapColumn": 80
    },
    // BetterComments
    "better-comments.tags": [
        {
            "tag": "XXX",
            "color": "#F8C471"
        },
        {
            "tag": "WARN",
            "color": "#FF6961"
        },
        {
            "tag": "NOTE",
            "color": "#3498DB"
        },
        {
            "tag": "TODO",
            "color": "#77C3EC"
        }
    ],
    // other extensions
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "codesnap.showWindowControls": false,
    "codesnap.shutterAction": "copy",
    "Workspace_Formatter.excludePattern": [
        "**/build",
        "**/.*",
        "**/.vscode",
        "**/html"
    ],
    "svg.preview.autoOpen": true,
    "remote.WSL.fileWatcher.polling": true,
    "errorLens.delay": 1000,
    "errorLens.enabledDiagnosticLevels": ["error", "warning"],
    "errorLens.enabled": false,
    // Rust
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer"
    },
    "redhat.telemetry.enabled": false,
    "workbench.editor.empty.hint": "hidden",
    "diffEditor.ignoreTrimWhitespace": false,
    "rust-analyzer.linkedProjects": [
        "${workspaceFolder}/Projects/project09/Cargo.toml",
        "${workspaceFolder}/Projects/project08/Cargo.toml",
        "${workspaceFolder}/Projects/project02/Cargo.toml",
        "${workspaceFolder}/Projects/project05/Cargo.toml",
        "${workspaceFolder}/Projects/project01/Cargo.toml",
        "${workspaceFolder}/Projects/project06/Cargo.toml",
        "${workspaceFolder}/Projects/project04/Cargo.toml",
        "${workspaceFolder}/Projects/project03/Cargo.toml",
        "${workspaceFolder}/Projects/project09/Cargo.toml",
        "${workspaceFolder}/Projects/project07/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_2/documentation/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_2/workspaces/lib2/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_2/workspaces/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_2/workspaces/lib1/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_2/workspaces/app/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_2/clippy_lint/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_2/compile_options/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_2/benches/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_2/unit_tests/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_2/coverage/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_1/modules/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_1/modules3/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_1/libs/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_1/paths/Cargo.toml",
        "${workspaceFolder}/Chapter07/7_1/modules2/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_3/structs/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_3/struct_functions/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_3/closures/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_3/structs_adv/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_3/function_pointer/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_3/associated_functions/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_3/string_slice/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_1/tuples/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_1/arrays/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_1/strings/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_1/slices/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_2/if_lets/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_2/enums2/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_2/matches/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_2/ifs/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_2/options/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_2/enums/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_2/while_let/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_2/loops/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_2/options2/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_2/enum_match/Cargo.toml",
        "${workspaceFolder}/Chapter03/3_2/functions/Cargo.toml",
        "${workspaceFolder}/Chapter09/polymorphism3/Cargo.toml",
        "${workspaceFolder}/Chapter09/supertraits/Cargo.toml",
        "${workspaceFolder}/Chapter09/oop/Cargo.toml",
        "${workspaceFolder}/Chapter09/polymorphism2/Cargo.toml",
        "${workspaceFolder}/Chapter09/polymorphism/Cargo.toml",
        "${workspaceFolder}/Chapter09/operator_overloads/Cargo.toml",
        "${workspaceFolder}/Chapter10/own_errors/Cargo.toml",
        "${workspaceFolder}/Chapter10/deref/Cargo.toml",
        "${workspaceFolder}/Chapter10/closure_traits/Cargo.toml",
        "${workspaceFolder}/Chapter04/copy_or_move/Cargo.toml",
        "${workspaceFolder}/Chapter04/rcs/Cargo.toml",
        "${workspaceFolder}/Chapter04/borrowing_rules/Cargo.toml",
        "${workspaceFolder}/Chapter04/casting/Cargo.toml",
        "${workspaceFolder}/Chapter04/lifetimes/Cargo.toml",
        "${workspaceFolder}/Chapter04/borrow_ends/Cargo.toml",
        "${workspaceFolder}/Chapter04/raiis/Cargo.toml",
        "${workspaceFolder}/Chapter04/ownerships/Cargo.toml",
        "${workspaceFolder}/Chapter06/vectors/Cargo.toml",
        "${workspaceFolder}/Chapter06/iterators3/Cargo.toml",
        "${workspaceFolder}/Chapter06/sets/Cargo.toml",
        "${workspaceFolder}/Chapter06/maps/Cargo.toml",
        "${workspaceFolder}/Chapter06/iterators2/Cargo.toml",
        "${workspaceFolder}/Chapter06/iterator_trait/Cargo.toml",
        "${workspaceFolder}/Chapter06/iterators1/Cargo.toml",
        "${workspaceFolder}/Chapter01/hello_world/Cargo.toml",
        "${workspaceFolder}/Chapter05/5_1/unwraps_expects/Cargo.toml",
        "${workspaceFolder}/Chapter05/5_1/propagating/Cargo.toml",
        "${workspaceFolder}/Chapter05/5_1/panics/Cargo.toml",
        "${workspaceFolder}/Chapter05/5_1/question_mark_operator/Cargo.toml",
        "${workspaceFolder}/Chapter05/5_1/errors/Cargo.toml",
        "${workspaceFolder}/Chapter05/5_2/derived/Cargo.toml",
        "${workspaceFolder}/Chapter05/5_2/generic_struct/Cargo.toml",
        "${workspaceFolder}/Chapter05/5_2/oop_traits/Cargo.toml",
        "${workspaceFolder}/Chapter05/5_2/generic_fn/Cargo.toml",
        "${workspaceFolder}/Chapter05/5_2/struct_traits/Cargo.toml",
        "${workspaceFolder}/Chapter08/channels/Cargo.toml",
        "${workspaceFolder}/Chapter08/threads/Cargo.toml",
        "${workspaceFolder}/Chapter08/channels2/Cargo.toml",
        "${workspaceFolder}/Chapter08/mutexes/Cargo.toml",
        "${workspaceFolder}/Chapter02/variables/Cargo.toml",
        "${workspaceFolder}/Chapter02/inputs/Cargo.toml",
        "${workspaceFolder}/Chapter02/print_types/Cargo.toml",
        "${workspaceFolder}/Chapter02/hello_world/Cargo.toml",
        "${workspaceFolder}/Chapter02/dtypes/Cargo.toml",
        "${workspaceFolder}/Chapter02/shadowing/Cargo.toml",
        "${workspaceFolder}/Chapter02/constants/Cargo.toml"
    ],
    "rust-analyzer.check.command": "clippy",
    "debug.allowBreakpointsEverywhere": true
}
